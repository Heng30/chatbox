import { Translator, Translation} from "./translator.slint";

export struct CodeTextItem {
    text-type: string,
    text: string,
}

export struct ChatItem {
    utext: string,
    btext: string,
    etext: string,

    btext-items: [CodeTextItem],

    uuid: string,
    is-mark: bool,
}

export struct ArchiveChatItem {
    name: string,
    uuid: string,
}

export struct ChatSession {
    uuid: string,
    is-mark: bool,
    name: string,
    system-prompt: string,
    api-model: string,
    use-history: bool,

    chat-items: [ChatItem]
}

export struct MessageItem {
    text: string,
    text-type: string,
}

export struct SessionDialogSetting {
    is-show: bool,
    handle-type: string,
    api-model: [string],
}

export struct SessionConfig {
    name: string,
    system-prompt: string,
    api-model: string,
    use-history: bool,
}

export struct OkCancelDialogSetting {
    title-type: string,
    title-text: string,
    body-text: string,

    handle-type: string,
    handle-uuid: string,
}

export struct SystemPrompts {
    names: [string],
    prompts: [string],
}

export struct SettingUI {
    font-size: string,
    win-width: string,
    win-height: string,
    language: string,
}

export struct SettingProxy {
    enabled: bool,
    url: string,
    port: string,
}

export struct SettingChatOpenAIChat {
    url: string,
    model: string,
    max-tokens: string,
    temperature: float,
    frequency-penalty: float,
    presence-penalty: float,
}

export struct SettingChatOpenAI {
    api-key: string,
    chat: SettingChatOpenAIChat,
}

export struct SettingChat {
    openai: SettingChatOpenAI,
}

export struct SettingAudio {
    model: [string],
    region: string,
    api-key: string,

    current-device: string,
    is-auto-v2t: bool,
}

export struct SettingDialogConfig {
    show: bool,
    ui: SettingUI,
    proxy: SettingProxy,
    chat: SettingChat,
    audio: SettingAudio,
}

export struct AboutDialog {
    show: bool,
    icon: image,
    title: string,
    text: string,
    sponsor: string,
}


export struct Cache {
    audio: string,
}

export global Store  {
    in-out property<bool> is-tab-pressed: false;

    in-out property<[ChatItem]> session-datas: [
        {
            utext: "hello world",
            btext: "int main()\n{\n    printf('hello world');",

            btext-items: [
                {
                    text-type: "plain",
                    text: "hello world"
                },
                {
                    text-type: "code",
                    text: "int main()\n{\n    printf('hello world');\n}"
                }
            ]
        },

        // {
        //     utext: "hello world",
        //     btext: "int main()\n{\n    printf('hello world');",

        //     btext-items: [
        //         {
        //             text-type: "plain",
        //             text: "hello world"
        //         },
        //         {
        //             text-type: "code",
        //             text: "int main()\n{\n    printf('hello world');\n}"
        //         }
        //     ]
        // },
    ];

    in-out property<bool> show-archive-dialog: false;
    in-out property<[ArchiveChatItem]> session-archive-datas: [
        // {
        //     name: "Test",
        //     uuid: "test-uuid",
        // },
        // {
        //     name: "Test2",
        //     uuid: "test-uuid2",
        // },
    ];


    in-out property<SystemPrompts> system-prompts: {
        names: [Store.translator.session-new-dialog-preset-system-prompt-name, Store.translator.session-new-dialog-preset-system-prompt-chatbot-name],
        prompts: ["", Store.translator.session-new-dialog-preset-system-prompt-chatbot]
    };

    in-out property<[ChatSession]> chat-sessions: [
        { name: translator.session-default-name, uuid: "default-session-uuid", is-mark: true , system-prompt: system-prompts.prompts[1], use_history: true, api-model: session-dialog-setting.api-model[0]},
    ];
    in-out property<string> current-session-uuid: chat-sessions[0].uuid;

    in-out property<MessageItem> message;

    in-out property<SessionDialogSetting> session-dialog-setting: {
        is-show: false,
        handle-type: "",
        api-model: ["ChatGPT(chat-3.5-turbo)"],
    };

    in-out property<OkCancelDialogSetting> ok-cancel-dialog-setting: {
        title-type: "",
        title-text: "",
        body-text: "",
        handle-type: "",
        handle-uuid: "",
    };

    in-out property<bool> is-audio-recording: false;
    in-out property<[string]> input-audio-devices: [];
    in-out property<SettingDialogConfig> setting-dialog-config: {
        show: true,
        ui: {
            font-size: "18",
            win-width: "1200",
            win-height: "800",
            language: "cn",
        },
        audio: {
            model: ["Azure Cognitive Services"],
        }
    };

    in-out property<AboutDialog> about-dialog: {
        show: false,
        title: "ChatBox v1.0.0",
        text: "Based on Slint-UI. Copyright 2022-2030 The Heng30 Company Ltd. All rights reserved. The program is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.",
        sponsor: "0xf1199999751b1a3A74590adBf95401D19AB30014",
        icon: @image-url("./images/bot.svg"),
    };

    in-out property<Cache> cache: {
        audio: "0M",
    };

    in-out property<{show: bool, text-cn: string, text-en: string}> help-dialog: {
        show: false,
        text-cn: "快捷键:\n"
            + "  1. Ctrl+U: 当前会话滚动到顶部。\n"
            + "  2. Ctrl+D: 当前会话滚动到底部。\n"
            + "  3. Ctrl+U: 问题输入框高放大4倍。\n"
            + "  4. Ctrl+D: 问题输入框高恢复原来大小。\n"
            + "  5. Ctrl+B: 打开/关闭归档侧面板。\n"
            + "\nOpenAI:\n"
            + "  1. chatgpt-turbo-3.5 目前最多支持4096个tokens（输入+输出）。\n"
            + "  2. temperature：控制ChatGPT自由发挥度，数值越高自由发挥度越高。\n"
            + "\n文字转音频:\n"
            + "  1. 不会使用代理。\n"
            + "  2. 仅支持中英双语朗读。\n"
            + "  3. 第一次转换可能需要比较长的时间，请耐心等待。之后就使用缓存进行朗读。\n"
            + "\n配置和数据:\n"
            + "  1. 配置保存在~/.config/chatbox目录下。\n"
            + "  2. 数据保存在~/.local/share/chatbox目录下。\n"
            + "\n注意:\n"
            + "  1. 删除会话会将该会话关联的归档文件一并删除。\n",


        text-en: "Keyboard shortcuts:\n"
            + "  1. Ctrl+U: Scroll to the top of the current session.\n"
            + "  2. Ctrl+D: Scroll to the bottom of the current session.\n"
            + "  3. Ctrl+U: Enlarge the question input box by four times.\n"
            + "  4. Ctrl+D: Restore the question input box to its original size.\n"
            + "  5. Ctrl+B: Open/Close archive panel。\n"
            + "\nOpenAI:\n"
            + "  1. chatgpt-turbo-3.5 currently supports up to 4096 tokens (input + output).\n"
            + "  2. Temperature: control ChatGPT's degree of freedom, with higher values resulting in more freedom.\n"
            + "\nText-to-speech:\n"
            + "  1. No proxies are used.\n"
            + "  2. Only support Chinese and English Speech.\n"
            + "  3. The first conversion may take some time, please be patient. Subsequently, caching will be used for reading out text.\n"
            + "\nConfiguration and data:\n"
            + "  1. Configuration is stored in the ~/.config/chatbox directory.\n"
            + "  2. Data is stored in the ~/.local/share/chatbox directory."
            + "\nWarning\n"
            + "  1. Deleting a session will also delete the associated archive file.\n"
    };

    in-out property<Translation> translator: setting-dialog-config.ui.language != "en" ? Translator.cn : Translator.en;
}

