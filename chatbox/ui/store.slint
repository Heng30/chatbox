import { Translator, Translation} from "./translator.slint";

export struct CodeTextItem {
    text-type: string,
    text: string,
}

export struct ChatItem {
    utext: string,
    btext: string,
    etext: string,

    btext-items: [CodeTextItem],

    uuid: string,
    is-mark: bool,
}

export struct ChatSession {
    uuid: string,
    is-mark: bool,
    name: string,
    system-prompt: string,
    api-model: string,
    use-history: bool,

    chat-items: [ChatItem]
}

export struct MessageItem {
    text: string,
    text-type: string,
}

export struct SessionDialogSetting {
    is-show: bool,
    handle-type: string,
    api-model: [string],
}

export struct SessionConfig {
    name: string,
    system-prompt: string,
    api-model: string,
    use-history: bool,
}

export struct OkCancelDialogSetting {
    title-type: string,
    title-text: string,
    body-text: string,

    handle-type: string,
    handle-uuid: string,
}

export struct SystemPrompts {
    names: [string],
    prompts: [string],
}

export struct SettingUI {
    font-size: string,
    win-width: string,
    win-height: string,
    language: string,
}

export struct SettingProxy {
    enabled: bool,
    url: string,
    port: string,
}

export struct SettingChatOpenAIChat {
    url: string,
    model: string,
    max-tokens: string,
    temperature: float,
    frequency-penalty: float,
    presence-penalty: float,
}

export struct SettingChatOpenAI {
    api-key: string,
    chat: SettingChatOpenAIChat,
}

export struct SettingChat {
    openai: SettingChatOpenAI,
}

export struct SettingDialogConfig {
    show: bool,
    ui: SettingUI,
    proxy: SettingProxy,
    chat: SettingChat,
}

export struct AboutDialog {
    show: bool,
    icon: image,
    title: string,
    text: string,
    sponsor: string,
}


export global Store  {
    in-out property<bool> is-tab-pressed: false;

    in-out property<[ChatItem]> session-datas: [
    /* { */
    /*     utext: "hello world", */
    /*     btext: "int main()\n{\n    printf('hello world');", */

    /*     btext-items: [ */
    /*         { */
    /*             text-type: "plain", */
    /*             text: "hello world" */
    /*         }, */
    /*         { */
    /*             text-type: "code", */
    /*             text: "int main()\n{\n    printf('hello world');\n}" */
    /*         } */
    /*     ] */
    /* }, */
    ];

    in-out property<SystemPrompts> system-prompts: {
        names: [Store.translator.session-new-dialog-preset-system-prompt-name, Store.translator.session-new-dialog-preset-system-prompt-chatbot-name],
        prompts: ["", Store.translator.session-new-dialog-preset-system-prompt-chatbot]
    };

    in-out property<[ChatSession]> chat-sessions: [
        { name: translator.session-default-name, uuid: "default-session-uuid", is-mark: true , system-prompt: system-prompts.prompts[1], use_history: true, api-model: session-dialog-setting.api-model[0]},
    ];
    in-out property<string> current-session-uuid: chat-sessions[0].uuid;

    in-out property<MessageItem> message;

    in-out property<SessionDialogSetting> session-dialog-setting: {
        is-show: false,
        handle-type: "",
        api-model: ["ChatGPT(chat-3.5-turbo)"],
    };

    in-out property<OkCancelDialogSetting> ok-cancel-dialog-setting: {
        title-type: "",
        title-text: "",
        body-text: "",
        handle-type: "",
        handle-uuid: "",
    };

    in-out property<SettingDialogConfig> setting-dialog-config: {
        show: false,
        ui: {
            font-size: "18",
            win-width: "1200",
            win-height: "800",
            language: "cn",
        },
    };

    in-out property<AboutDialog> about-dialog: {
        show: false,
        title: "ChatBox v1.0.0",
        text: "Based on Slint-UI. Copyright 2022-2030 The Heng30 Company Ltd. All rights reserved. The program is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.",
        sponsor: "0xf1199999751b1a3A74590adBf95401D19AB30014",
        icon: @image-url("./images/bot.svg"),
    };

    in-out property<{show: bool}> help-dialog: {
        show: false,
    };

    in-out property<Translation> translator: setting-dialog-config.ui.language != "en" ? Translator.cn : Translator.en;
}

