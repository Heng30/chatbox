import { Translator, Translation} from "./translator.slint";

export struct CodeTextItem {
    text-type: string,
    text: string,
    img: image,
}

export struct ChatItem {
    utext: string,
    btext: string,
    etext: string,

    btext-items: [CodeTextItem],

    timestamp: string,
    uuid: string,
    is-mark: bool,
}

export struct ArchiveChatItem {
    name: string,
    uuid: string,
}

export struct ChatSession {
    uuid: string,
    is-mark: bool,
    name: string,
    system-prompt: string,
    api-model: string,
    use-history: bool,
    shortcut-instruction: string,
    icon-index: int,

    chats-viewport-y: length,
    chat-items: [ChatItem]
}

export struct MessageItem {
    text: string,
    text-type: string,
}

export struct IconDialogSetting {
    is-show: bool,
    icons: [image],
}

export struct InstTipItem {
    inst: string,
    session-name: string,
    session-icon-index: int,
}

export struct InstTipSetting {
    items: [InstTipItem],
}

export struct SessionDialogSetting {
    is-show: bool,
    handle-type: string,
    api-model: [string],
}

export struct SessionConfig {
    name: string,
    system-prompt: string,
    api-model: string,
    use-history: bool,
    shortcut-instruction: string,
    icon-index: int,
}

export struct OkCancelDialogSetting {
    title-type: string,
    title-text: string,
    body-text: string,

    handle-type: string,
    handle-uuid: string,
}

export struct SystemPrompts {
    names: [string],
    prompts: [string],
}

export struct SettingUI {
    font-size: string,
    win-width: string,
    win-height: string,
    language: string,
}

export struct SettingProxy {
    openai: bool,
    azure: bool,
    url: string,
    port: string,
}

export struct SettingChatOpenAIChat {
    url: string,
    max-tokens: string,
    max-tokens-16k: string,
    temperature: float,
    frequency-penalty: float,
    presence-penalty: float,
    context-length: string,
}

export struct SettingChatAzureChat {
    url: string,
    max-tokens: string,
    temperature: float,
    frequency-penalty: float,
    presence-penalty: float,
}

export struct SettingChatOpenAI {
    api-key: string,
    chat: SettingChatOpenAIChat,
}

export struct SettingChatAzure {
    api-key: string,
    chat: SettingChatAzureChat,
}

export struct SettingChat {
    openai: SettingChatOpenAI,
    azure: SettingChatAzure,
}

export struct SettingAudio {
    model: [string],
    region: string,
    api-key: string,

    output-volume: float,
    current-input-device: string,
    current-output-device: string,
    is-auto-v2t: bool,
    is-auto-play-record: bool,
    speech-language: string,
}

export struct SettingDialogConfig {
    show: bool,
    ui: SettingUI,
    proxy: SettingProxy,
    chat: SettingChat,
    audio: SettingAudio,
}

export struct AboutDialog {
    show: bool,
    icon: image,
    title: string,
    text: string,
    sponsor: string,
}


export struct Cache {
    audio: string,
}

export global Store  {
    in-out property<bool> is-tab-pressed: false;

    in-out property<[ChatItem]> session-datas: [
        {
            utext: "hello world ejfiwejfwij fwij wijfweifj wiofjw iofjwiofjwe iojfwioj  wiofj wiejf wiofjw ijfwie\n\n wjfiwej iwjwfie  ",
            btext: "int main()\n{\n    printf('hello world');",
            timestamp: "2023-12-03 12:03:45",

            btext-items: [
                {
                    text-type: "plain",
                    text: "hello world fwjeifj iwfj wofjw oijfw jfwij fwijf wijf wiofjw iojfwio jwij fwijf wiofj wijf wioj fwij wiej wjfwifjei11111 fjweifj wfjw ei\n jiwefjw fjwioe jwiefjw"
                },
                {
                    text-type: "code",
                    text: "int main()\n{\n    printf('hello world jweifjw iefjw oifjweio fjweifjw eifjwei fjweifjw iefjwei jfwie wefjwefiwje fowejf oiwejfiow jefiowj fiwejf iwjefio w ');\n}"
                },
                {
                    text-type: "image",
                    img: @image-url("./images/success.svg")
                },
            ]
        },
        {
            utext: "hello world jfjeif wfwejif jwifjw ",
            btext: "int main()\n{\n    printf('hello world');",
            timestamp: "2023-12-03 12:03:45",

            btext-items: [
                {
                    text-type: "plain",
                    text: "hello world"
                },
                {
                    text-type: "code",
                    text: "int main()\n{\n    printf('hello world');\n}"
                }
            ]
        },
        {
            utext: "hello world",
            btext: "int main()\n{\n    printf('hello world');",
            timestamp: "2023-12-03 12:03:45",

            btext-items: [
                {
                    text-type: "plain",
                    text: "hello world"
                },
                {
                    text-type: "code",
                    text: "int main()\n{\n    printf('hello world');\n}"
                }
            ]
        },
    ];

    in-out property<bool> show-archive-dialog: false;
    in-out property<string> archive-search-text;
    in-out property<[ArchiveChatItem]> session-archive-datas: [
        {
            name: "测试1",
            uuid: "test-uuid",
        },
        {
            name: "测试2",
            uuid: "test-uuid2",
        },
    ];


    in-out property<SystemPrompts> system-prompts: {
        names: [Store.translator.session-new-dialog-preset-system-prompt-name, Store.translator.session-new-dialog-preset-system-prompt-chatbot-name],
        prompts: ["", Store.translator.session-new-dialog-preset-system-prompt-chatbot]
    };

    in-out property<[ChatSession]> chat-sessions: [
        {
            name: translator.session-default-name,
            uuid: "default-session-uuid",
            is-mark: true,
            system-prompt: system-prompts.prompts[1],
            use_history: true,
            icon-index: 0,
            api-model: session-dialog-setting.api-model[0]
        },
        // {
        //     name: "会话1",
        //     uuid: "default-session-xxxuuid",
        //     is-mark: true,
        //     system-prompt: system-prompts.prompts[1],
        //     use_history: true,
        //     icon-index: 0,
        //     api-model: session-dialog-setting.api-model[0],
        // },
        // {
        //     name: "会话2",
        //     uuid: "default-session-xxuuid",
        //     is-mark: false,
        //     system-prompt: system-prompts.prompts[1],
        //     use_history: true,
        //     icon-index: 0,
        //     api-model: session-dialog-setting.api-model[0]
        // },
    ];
    in-out property<string> current-session-uuid: chat-sessions[0].uuid;
    in-out property<string> previous-session-uuid: chat-sessions[0].uuid;

    in-out property<MessageItem> message;

    in-out property<SessionDialogSetting> session-dialog-setting: {
        is-show: false,
        handle-type: "",
        api-model: ["ChatGPT(chat-3.5-turbo)", "Azure(chat-35-turbo)"],
    };

    in-out property<OkCancelDialogSetting> ok-cancel-dialog-setting: {
        title-type: "",
        title-text: "",
        body-text: "",
        handle-type: "",
        handle-uuid: "",
    };

    in-out property<bool> is-audio-recording: false;
    in-out property<[string]> input-audio-devices: [];
    in-out property<[string]> output-audio-devices: [];
    in-out property<SettingDialogConfig> setting-dialog-config: {
        show: false,
        ui: {
            font-size: "20",
            win-width: "1200",
            win-height: "800",
            language: "cn",
        },
        audio: {
            model: ["Azure Cognitive Services"],
        }
    };

    in-out property<AboutDialog> about-dialog: {
        show: false,
        title: "ChatBox v1.0.0",
        text: "Based on Slint-UI. Copyright 2022-2030 The Heng30 Company Ltd. All rights reserved. The program is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.",
        sponsor: "0xf1199999751b1a3A74590adBf95401D19AB30014",
        icon: @image-url("./images/bot.svg"),
    };

    in-out property<Cache> cache: {
        audio: "0M",
    };

    in-out property<{show: bool, text-cn: string, text-en: string}> help-dialog: {
        show: false,
        text-cn: "快捷键:\n"
            + "  1. Ctrl+[: 当前会话滚动到顶部。2. Ctrl+]: 当前会话滚动到底部。3. Ctrl+U: 切换最近两个会话。\n"
            + "  5. Ctrl+B: 打开/关闭归档侧面板。6. Ctrl+R: 启动/停止录音。\n"
            + "  7. Ctrl+P: 播放录音。8. Ctrl+T: 录音转文字。9. Ctrl+H: 重置当前会话。10. Ctrl+L: 移除当前对话最后一次对话。\n"
            + "  11. Ctrl+(0~9): 1~10个会话切换。 12. Ctrl+N: 显示新建归档面板。 13. Ctrl+M: 重新提问最后一个问题。\n"
            + "  14. Ctrl+I: 定位到提问框。 15. Ctrl+O: 定位到搜索框。 16. Ctrl+Y: 启用/关闭会话更新自动滚动到底部。 \n"
            + "  17. Ctrl+J: 会话向下滚动25%。 18. Ctrl+K: 会话向上滚动25%。\n"
            + "\nOpenAI:\n"
            + "  1. temperature：控制ChatGPT自由发挥度，数值越高自由发挥度越高。\n"
            + "\n文字转音频:\n"
            + "  1. 仅支持中英双语朗读。2. 第一次转换可能需要比较长的时间，请耐心等待。之后就使用缓存进行朗读。\n"
            + "\n录音转文字:\n"
            + "  1. 最大录音时长为1分钟。2. 录音转文字需要一定的时间，请耐心等待。\n"
            + "\n配置和数据:\n"
            + "  1. 配置保存在~/.config/chatbox目录下。  2. 数据保存在~/.local/share/chatbox目录下。\n"
            + "\n注意:\n"
            + "  1. 删除会话会将该会话关联的归档文件一并删除。\n",

        text-en: "Keyboard shortcuts:\n"
            + "  1. Ctrl+[: Scroll to the top of the current session. 2. Ctrl+]: Scroll to the bottom of the current session.\n"
            + "  3. Ctrl+U: Switch between the last two sessions. \n"
            + "  5. Ctrl+B: Open/Close archive panel. 6. Ctrl+R: Start/Stop Recording.\n"
            + "  7. Ctrl+P: Play Recording. 8. Ctrl+T: Convert Recording to Text. 9. Ctrl+H: Reset Current Session.\n"
            + "  10. Ctrl+L: Remove the last chat from the current chats.\n"
            + "  11. Ctrl+(0~9): Switch session between 1 to 10.\n"
            + "  12. Ctrl+N: Show archive panel. 13. Ctrl+M: Retry the last question.\n"
            + "  14. Ctrl+I: Focus on question input box. 15. Ctrl+O. Focus on search input box.\n"
            + "  16. Ctrl+Y: Enabled/Disabled chats panel auto scroll to bottom when updating.\n"
            + "  17. Ctrl+J: Scroll down the conversation by 25%. 18. Ctrl+K: Scroll up the conversation by 25%.\n"
            + "\nOpenAI:\n"
            + "  1. Temperature: control ChatGPT's degree of freedom, with higher values resulting in more freedom.\n"
            + "\nText-to-speech:\n"
            + "  1. Only support Chinese and English Speech.\n"
            + "  2. The first conversion may take some time, please be patient. Subsequently, caching will be used for reading out text.\n"
            + "\nSpeech To Text:\n"
            + "  1. Max recording time is 1 minutes\n"
            + "  2. Transcribing audio into text takes some time, please be patient.\n"
            + "\nConfiguration and data:\n"
            + "  1. Configuration is stored in the ~/.config/chatbox directory.  2. Data is stored in the ~/.local/share/chatbox directory.\n"
            + "\nWarning:\n"
            + "  1. Deleting a session will also delete the associated archive file.\n"
    };

    in-out property<Translation> translator: Translator.translation(setting-dialog-config.ui.language == "cn");

    in-out property<InstTipSetting> inst-tip-setting: {
        items: [
            // {
            //     inst: "/gr",
            //     session-name: "语法解释fewji",
            //     session-icon-index: 0,
            // },
            // {
            //     inst: "/wo",
            //     session-name: "单词解释",
            //     session-icon-index: 0,
            // }
        ]
    };

    in-out property<IconDialogSetting> icon-dialog-setting: {
        is-show: false,
        icons : [
            @image-url("./icons/1.svg"),
            @image-url("./icons/2.svg"),
            @image-url("./icons/3.svg"),
            @image-url("./icons/4.svg"),
            @image-url("./icons/5.svg"),
            @image-url("./icons/6.svg"),
            @image-url("./icons/7.svg"),
            @image-url("./icons/8.svg"),
            @image-url("./icons/9.svg"),
            @image-url("./icons/10.svg"),
            @image-url("./icons/11.svg"),
            @image-url("./icons/12.svg"),
            @image-url("./icons/13.svg"),
            @image-url("./icons/14.svg"),
            @image-url("./icons/15.svg"),
            @image-url("./icons/16.svg"),
            @image-url("./icons/17.svg"),
            @image-url("./icons/18.svg"),
            @image-url("./icons/19.svg"),
            @image-url("./icons/20.svg"),
            @image-url("./icons/21.svg"),
            @image-url("./icons/22.svg"),
            @image-url("./icons/23.svg"),
            @image-url("./icons/24.svg"),
            @image-url("./icons/25.svg"),
            @image-url("./icons/26.svg"),
            @image-url("./icons/27.svg"),
            @image-url("./icons/28.svg"),
            @image-url("./icons/29.svg"),
            @image-url("./icons/30.svg"),
            @image-url("./icons/31.svg"),
            @image-url("./icons/32.svg"),
            @image-url("./icons/33.svg"),
            @image-url("./icons/34.svg"),
            @image-url("./icons/35.svg"),
            @image-url("./icons/36.svg"),
            @image-url("./icons/37.svg"),
            @image-url("./icons/38.svg"),
            @image-url("./icons/39.svg"),
            @image-url("./icons/40.svg"),
            @image-url("./icons/41.svg"),
            @image-url("./icons/42.svg"),
            @image-url("./icons/43.svg"),
            @image-url("./icons/44.svg"),
            @image-url("./icons/45.svg"),
            @image-url("./icons/46.svg"),
            @image-url("./icons/47.svg"),
            @image-url("./icons/48.svg"),
        ],
    };
}

