import { Theme } from "../theme.slint";
import { Store } from "../store.slint";
import { Logic } from "../logic.slint";

export component InstTip inherits Rectangle {
    visible: Store.inst-tip-setting.items.length > 0;
    width: vbox.preferred-width;
    height: vbox.preferred-height;
    border-width: 1px;
    border-color: Theme.base-border-color;
    border-radius: Theme.border-radius;
    background: @linear-gradient(0deg, Theme.dark-fill-color 0%, Theme.base-background 100%);

    property<length> max-txt-length: 0px;

    function cal-max-txt-length(index: int, width: length) {
        if (index == 0) {
            root.max-txt-length = 0px;
        }

        if (width > root.max-txt-length) {
            root.max-txt-length = width;
        }
    }

    vbox := VerticalLayout {
        alignment: start;
        padding: Theme.padding;

        for item[index] in Store.inst-tip-setting.items : Rectangle {
            background: area.has-hover ? Theme.dark-border-color : Colors.transparent;
            border-radius: Theme.border-radius;

            init => {
                root.cal-max-txt-length(index, txt.preferred-width);
            }

            HorizontalLayout {
                padding: Theme.padding * 2;

                VerticalLayout {
                    alignment: center;
                    width: root.max-txt-length + Theme.padding * 4;
                    txt := Text {
                        text: item.inst;
                        color: Theme.regular-text-color;
                    }
                }

                HorizontalLayout {
                    spacing: Theme.spacing * 2;

                    VerticalLayout {
                        alignment: center;
                        Image {
                            source: Store.icon-dialog-setting.icons[Math.max(0, Math.min(item.session-icon-index, Store.icon-dialog-setting.icons.length - 1))];
                            colorize: Theme.regular-text-color;
                            width: Theme.enlarge-font-size * 1.2;
                        }
                    }

                    VerticalLayout {
                        alignment: center;
                        Text {
                            text: item.session-name;
                            color: Theme.regular-text-color;
                        }
                    }
                }
            }

            area := TouchArea {
                clicked => {
                    Logic.select-inst(item.inst);
                    Store.inst-tip-setting.items = [];
                }
            }
        }
    }

}
