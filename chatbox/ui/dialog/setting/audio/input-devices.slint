import { ComboBox, CheckBox } from "std-widgets.slint";
import { Theme } from "../../../theme.slint";
import { Store } from "../../../store.slint";
import { Btn } from "../../../base/btn.slint";
import { Logic } from "../../../logic.slint";

export component InputDevices inherits Rectangle {
    property<length> label-width: Theme.default-label-width * 1.5;

    in-out property current-device <=> devices-combox.current-value;
    in-out property is-auto-v2t <=> cbox-v2t.checked;
    in-out property is-auto-play-record <=> cbox-record.checked;
    in-out property<string> language: Store.setting-dialog-config.audio.speech-language;

    width: 100%;

   VerticalLayout {
        padding-top: Theme.padding * 4;
        spacing: Theme.spacing;

        HorizontalLayout {
            HorizontalLayout {
                label-txt := Text {
                    width: root.label-width;
                    text: Store.translator.setting-dialog-audio-input-devices-label;
                }

                devices-combox := ComboBox {
                    height: label-txt.preferred-height;
                    model: Store.input-audio-devices;
                    current-value: Store.setting-dialog-config.audio.current-input-device;
                }
            }

        }

        HorizontalLayout {
            HorizontalLayout {
                width: 50%;
                VerticalLayout {
                    alignment: center;
                    Text {
                        width: root.label-width;
                        text: Store.translator.setting-dialog-auto-speech-language-label;
                    }
                }

                cn-checkbox := CheckBox {
                    text: "中文";
                    checked: root.language != "en";
                    toggled => {
                        en-checkbox.checked = !self.checked;
                        if (self.checked) {
                            root.language = "cn";
                        }
                    }
                }
            }

            HorizontalLayout {
                en-checkbox := CheckBox {
                    text: "English";
                    checked: root.language == "en";
                    toggled => {
                        cn-checkbox.checked = !self.checked;
                        if (self.checked) {
                            root.language = "en";
                        }
                    }
                }
            }
        }

        HorizontalLayout {
            cbox-record := CheckBox {
                width: 50%;
                checked: Store.setting-dialog-config.audio.is-auto-play-record;
                text: self.checked ? Store.translator.setting-dialog-auto-play-record-enabled : Store.translator.setting-dialog-auto-play-record-disabled;
           }

            cbox-v2t := CheckBox {
                checked: Store.setting-dialog-config.audio.is-auto-v2t;
                text: self.checked ? Store.translator.setting-dialog-auto-to-text-enabled : Store.translator.setting-dialog-auto-to-text-disabled;
           }
        }
    }
}
