import { LineEdit, Slider } from "std-widgets.slint";
import { Theme } from "../../../theme.slint";
import { Store } from "../../../store.slint";
import { Label } from "../../../base/label.slint";

export component Azure inherits Rectangle {
    property<length> label-width: Theme.default-label-width;

    in-out property api-key <=> api-lineedit.text;
    in-out property url <=> url-lineedit.text;
    in-out property max-tokens <=> tokens-slider.value;
    in-out property temperature <=> temp-slider.value;
    in-out property frequency-penalty <=> frequency-slider.value;
    in-out property presence-penalty <=> presence-slider.value;

    VerticalLayout {
        spacing: Theme.spacing * 4;
        alignment: start;

        HorizontalLayout {
            api-txt := Label {
                width: label-width;
                text: "API Key:";
            }

            api-lineedit := LineEdit {
                placeholder-text: "API Key";
                input-type: self.has-focus ? text : password;
            }
        }

        HorizontalLayout {
            url-txt := Label {
                width: label-width;
                text: "API URL:";
            }

            url-lineedit := LineEdit {
                placeholder-text: "API URL";
            }
        }

        HorizontalLayout {
            Label {
                width: label-width;
                text: "Max Tokens:";
            }

            VerticalLayout {
                alignment: center;
                tokens-slider := Slider {
                    minimum: 128;
                    maximum: 3968;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Label {
                    text: Math.floor(tokens-slider.value);
                }
            }
        }

        HorizontalLayout {
            Label {
                width: label-width;
                text: "Temperature:";
            }

            VerticalLayout {
                alignment: center;
                temp-slider := Slider {
                    minimum: 0;
                    maximum: 200;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Label {
                    text: Math.round(temp-slider.value) / 100;
                }
            }
        }

        HorizontalLayout {
            Label {
                width: label-width;
                text: "Frequency:";
            }

            VerticalLayout {
                alignment: center;
                frequency-slider := Slider {
                    minimum: -200;
                    maximum: 200;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Label {
                    text: Math.round(frequency-slider.value) / 100;
                }
            }
        }

        HorizontalLayout {
            Label {
                width: label-width;
                text: "Presence:";
            }

            VerticalLayout {
                alignment: center;
                presence-slider := Slider {
                    minimum: -200;
                    maximum: 200;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Label {
                    text: Math.round(presence-slider.value) / 100;
                }
            }
        }
    }
}
