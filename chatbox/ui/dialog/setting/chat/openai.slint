import { CheckBox, LineEdit, Slider } from "std-widgets.slint";
import { Theme } from "../../../theme.slint";
import { Store } from "../../../store.slint";

export component OpenAI inherits Rectangle {
    property<length> label-width: Theme.default-label-width;

    in-out property<string> context-length: "4k";

    in-out property api-key <=> api-lineedit.text;
    in-out property url <=> url-lineedit.text;
    in-out property max-tokens <=> tokens-slider.value;
    in-out property max-tokens-16k <=> tokens-16k-slider.value;
    in-out property temperature <=> temp-slider.value;
    in-out property frequency-penalty <=> frequency-slider.value;
    in-out property presence-penalty <=> presence-slider.value;

    VerticalLayout {
        spacing: Theme.spacing * 4;
        alignment: start;

        HorizontalLayout {
            api-txt := Text {
                width: label-width;
                text: "API Key:";
            }

            api-lineedit := LineEdit {
                placeholder-text: "API Key";
            }
        }

        HorizontalLayout {
            url-txt := Text {
                width: label-width;
                text: "API URL:";
            }

            url-lineedit := LineEdit {
                placeholder-text: "API URL";
            }
        }

        HorizontalLayout {
            Text {
                width: label-width;
                text: "Tokens(4k):";
            }

            VerticalLayout {
                alignment: center;
                tokens-slider := Slider {
                    minimum: 0;
                    maximum: 4096;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Text {
                    text: Math.floor(tokens-slider.value);
                }
            }
        }

        HorizontalLayout {
            Text {
                width: label-width;
                text: "Tokens(16k):";
            }

            VerticalLayout {
                alignment: center;
                tokens-16k-slider := Slider {
                    minimum: 0;
                    maximum: 16 * 1024;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Text {
                    text: Math.floor(tokens-16k-slider.value);
                }
            }
        }

        HorizontalLayout {
            Text {
                width: label-width;
                text: "Temperature:";
            }

            VerticalLayout {
                alignment: center;
                temp-slider := Slider {
                    minimum: 0;
                    maximum: 200;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Text {
                    text: Math.round(temp-slider.value) / 100;
                }
            }
        }

        HorizontalLayout {
            Text {
                width: label-width;
                text: "Frequency:";
            }

            VerticalLayout {
                alignment: center;
                frequency-slider := Slider {
                    minimum: -200;
                    maximum: 200;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Text {
                    text: Math.round(frequency-slider.value) / 100;
                }
            }
        }

        HorizontalLayout {
            Text {
                width: label-width;
                text: "Presence:";
            }

            VerticalLayout {
                alignment: center;
                presence-slider := Slider {
                    minimum: -200;
                    maximum: 200;
                }
            }

            VerticalLayout {
                alignment: center;
                padding-left: Theme.padding * 4;
                width: Theme.default-font-size * 4;

                Text {
                    text: Math.round(presence-slider.value) / 100;
                }
            }
        }

        HorizontalLayout {
            Text {
                width: label-width;
                text: Store.translator.setting-dialog-chat-context-length;
            }

            HorizontalLayout {
                checkbox-4k := CheckBox {
                    width: 50%;
                    text: "4k";
                    checked: root.context-length == "4k";
                    toggled => {
                        checkbox-16k.checked = !self.checked;
                        if (self.checked) {
                            root.context-length = "4k";
                        }
                    }
                }

                checkbox-16k := CheckBox {
                    width: 50%;
                    text: "16k";
                    checked: root.context-length == "16k";
                    toggled => {
                        checkbox-4k.checked = !self.checked;
                        if (self.checked) {
                            root.context-length = "16k";
                        }
                    }
                }
            }
        }
    }
}
