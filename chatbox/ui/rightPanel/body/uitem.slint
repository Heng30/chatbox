import { Theme } from "../../theme.slint";
import { Store } from "../../store.slint";
import { IconBtn } from "../../base/icon-btn.slint";
import { Logic } from "../../logic.slint";

export component UItem inherits VerticalLayout{
    in-out property text <=> txt.text;
    in-out property<string> uuid;
    in-out property<bool> is-mark;
    callback copy-clicked <=> copy-icon.clicked;

    padding-top: Theme.padding;
    padding-left: Theme.padding * 2;
    padding-right: self.width * Theme.uitem-right-padding;
    spacing: Theme.spacing;

    HorizontalLayout {
        padding-bottom: Theme.padding;
        alignment: space-between;
        Rectangle {
            height: img.width + 10px;
            width: img.width + 10px;
            border-radius: self.height / 2;
            background: Theme.basic-black-color;
            img := Image {
                width: Theme.icon-size;
                height: Theme.icon-size;
                image-fit: ImageFit.contain;
                source: @image-url("../../images/user.svg");
                colorize: Colors.steelblue;
            }
        }

        HorizontalLayout {
            alignment: end;
            padding-right: Theme.padding;
            spacing: Theme.spacing * 2;

            VerticalLayout {
                alignment: end;
                IconBtn {
                    icon: @image-url("../../images/star.svg");
                    colorize: root.is-mark ? Theme.mark-color : Theme.unmark-color;
                    clicked => {
                        Logic.toggle-mark-chat-item(root.uuid);
                        if (root.is-mark) {
                            Logic.show-message(Store.translator.unmarked-success, "success");
                        } else {
                            Logic.show-message(Store.translator.marked-success, "success");
                        }
                    }
                }
            }

            VerticalLayout {
                alignment: end;
                copy-icon := IconBtn {
                    icon: @image-url("../../images/copy.svg");
                }
            }

            VerticalLayout {
                alignment: end;
                IconBtn {
                    icon: @image-url("../../images/delete.svg");
                    clicked => {
                        Store.ok-cancel-dialog-setting.title-type = "warning";
                        Store.ok-cancel-dialog-setting.title-text = Store.translator.warning;
                        Store.ok-cancel-dialog-setting.body-text = Store.translator.delete-or-not;
                        Store.ok-cancel-dialog-setting.handle-type = "chat-item";
                        Store.ok-cancel-dialog-setting.handle-uuid = root.uuid;

                    }
                }
            }
        }
    }

    HorizontalLayout {
        Rectangle {
            background: Theme.light-fill-color;
            border-radius: Theme.border-radius;
            VerticalLayout{
                padding: Theme.padding * 2;
                txt := Text {
                    color: Theme.primary-text-color;
                    font-size: Theme.default-font-size + 2px;
                    wrap: word-wrap;
                }
            }

            TouchArea {
                clicked => {
                    Logic.copy_to_clipboard(root.text);
                }
            }
        }
    }
}

