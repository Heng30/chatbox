import { Theme } from "../../theme.slint";
import { Store } from "../../store.slint";
import { IconBtn } from "../../base/icon-btn.slint";
import { Logic } from "../../logic.slint";

export component UItem inherits VerticalLayout{
    in-out property text <=> txt.text;
    in-out property timestamp <=> timestamp-txt.text;
    in-out property<string> uuid;

    padding-left: Theme.padding * 2;
    spacing: Theme.spacing;
    width: Math.min(txt-vbox.preferred-width + self.padding-left, Theme.uitem-max-width);

    HorizontalLayout {
        padding-bottom: Theme.padding;
        alignment: space-between;
        spacing: Theme.spacing * 4;

        HorizontalLayout {
            spacing: Theme.spacing * 4;

            Rectangle {
                height: img.width + 10px;
                width: img.width + 10px;
                border-radius: self.height / 2;
                background: Theme.basic-black-color;
                img := Image {
                    width: Theme.icon-size;
                    height: Theme.icon-size;
                    image-fit: ImageFit.contain;
                    source: @image-url("../../images/user.svg");
                    colorize: Colors.steelblue;
                }
            }

            VerticalLayout {
                alignment: center;
                timestamp-txt := Text {
                    color: Theme.regular-text-color;
                    font-size: Theme.default-font-size - 2px;
                }
            }
        }

        HorizontalLayout {
            alignment: end;
            padding-right: Theme.padding;
            spacing: Theme.spacing * 2;

            VerticalLayout {
                alignment: center;
                copy-icon := IconBtn {
                    icon: @image-url("../../images/copy.svg");
                    clicked => {
                        Logic.copy_to_clipboard(root.text);
                    }
                }
            }

            VerticalLayout {
                alignment: center;
                IconBtn {
                    icon: @image-url("../../images/delete.svg");
                    clicked => {
                        Store.ok-cancel-dialog-setting.title-type = "warning";
                        Store.ok-cancel-dialog-setting.title-text = Store.translator.warning;
                        Store.ok-cancel-dialog-setting.body-text = Store.translator.delete-or-not;
                        Store.ok-cancel-dialog-setting.handle-type = "chat-item";
                        Store.ok-cancel-dialog-setting.handle-uuid = root.uuid;

                    }
                }
            }
        }
    }

    Rectangle {
        background: Theme.brand-color;
        border-radius: Theme.border-radius;
        txt-vbox := VerticalLayout{
            padding: Theme.padding * 2;
            txt := TextInput {
                color: Theme.basic-white-color;
                font-size: Theme.default-font-size + 2px;
                wrap: word-wrap;
                single-line: false;
                read-only: true;
            }
        }
    }
}

