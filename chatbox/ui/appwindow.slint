import { Theme } from "./theme.slint";
import { Logic } from "./logic.slint";
import { Store } from "./store.slint";
import { Util } from "./util.slint";
import { Translator } from "./translator.slint";
import { ChatItem, ChatSession, Store, InstTipItem } from "./store.slint";
import { LPanel } from "./leftPanel/panel.slint";
import { RPanel } from "./rightPanel/panel.slint";
import { Message } from "./base/message.slint";
import { SessionDialog } from "./dialog/session/dialog.slint";
import { SettingDialog } from "./dialog/setting/dialog.slint";
import { AboutDialog } from "./dialog/about.slint";
import { ScreenDialog } from "./dialog/screen.slint";
import { IconDialog } from "./dialog/icons.slint";
import { HelpDialog } from "./dialog/help.slint";
import { OkCancelDialog } from "./dialog/ok-cancel.slint";
import { IconBtn } from "./base/icon-btn.slint";
import { NewArchiveDialog } from "./dialog/new-archive.slint";
import { ArchivePanel } from "./archive/panel.slint";

export component AppWindow inherits Window {
    default-font-size: Theme.default-font-size;
    default-font-family: Theme.default-font-family;
    preferred-width: Theme.default-width;
    preferred-height: Theme.default-height;
    background: Theme.base-background;
    icon: @image-url("./images/robot.png");
    forward-focus: fscope;
    no-frame: true;
    title: "chatbox";

    in-out property session-name <=> session-dialog.name;
    in-out property session-system-prompt <=> session-dialog.system-prompt;
    in-out property session-api-model <=> session-dialog.api-model;
    in-out property session-use-history <=> session-dialog.use-history;
    in-out property session-shortcut-instruction <=> session-dialog.shortcut-instruction;
    in-out property session-icon-index <=> session-dialog.icon-index;

    in-out property question <=> rpanel.question;
    in-out property chats-viewport-y <=> rpanel.chats-viewport-y;

    in-out property archive-search-text <=> arch-panel.search-text;

    in-out property screen-text <=> screen-dialog.text;

    in-out property<bool> is-chats-auto-scroll-down: false;

    public function is-chats-on-bottom() -> bool {
        return rpanel.is-chats-on-bottom();
    }

    public function archive-scroll-to-top() {
        arch-panel.scroll-to-top();
    }

    public function chats-scroll-to-bottom() {
        rpanel.scroll-to-bottom();
    }

    public function jump-to-viewport-y(vy: length) {
        rpanel.jump-to-viewport-y(vy);
    }

    public function show-archive-dialog() {
        Store.show-archive-dialog = true;
        arch-dialog.text = "";
        arch-dialog.focus();
    }

    public function force-search-input-focus() {
        arch-panel.focus();
    }

    public function show-record-indicator() {
        rpanel.start-record-indicator();
    }

    public function hide-record-indicator() {
        rpanel.stop-record-indicator();
    }

    public function show-screen-dialog(text: string) {
        screen-dialog.text = text;
        Store.screen-dialog-setting.is-show = true;
        screen-dialog.focus();
    }

    init => {
        rpanel.force-question-input-focus();
    }

    fscope := FocusScope {
        property <bool> is-ctrl-pressed: false;
        key-pressed(event) => {
            if (event.text == Key.Control) {
                is-ctrl-pressed = true;
            } else if (event.text == Key.Escape) {
                modal.hide();
            }

            if (is-ctrl-pressed) {
                if (event.text == ".") {
                    Theme.toggle-archive-panel();
                } else if (event.text == ",") {
                    Theme.toggle-sessions-panel();
                } else if (event.text == "i") {
                    rpanel.force-question-input-focus();
                } else if (event.text == "n") {
                    root.show-archive-dialog();
                } else if (event.text == "o") {
                    root.force-search-input-focus();
                } else if (event.text == "u") {
                    Logic.switch-session(Store.current-session-uuid, Store.previous-session-uuid);
                } else if (event.text == "y") {
                    root.is-chats-auto-scroll-down = !root.is-chats-auto-scroll-down;
                    if (root.is-chats-auto-scroll-down) {
                        Logic.show-message(Store.translator.session-chat-enabled-auto-scroll-down, "success");
                    } else {
                        Logic.show-message(Store.translator.session-chat-disabled-auto-scroll-down, "success");
                    }
                } else if (event.text == "z") {
                    Logic.stop-audio-play();
                } else if (event.text == "0") {
                    if (Store.chat-sessions.length > 0) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[0].uuid);
                    }
                } else if (event.text == "1") {
                    if (Store.chat-sessions.length > 1) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[1].uuid);
                    }
                } else if (event.text == "2") {
                    if (Store.chat-sessions.length > 2) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[2].uuid);
                    }
                } else if (event.text == "3") {
                    if (Store.chat-sessions.length > 3) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[3].uuid);
                    }
                } else if (event.text == "4") {
                    if (Store.chat-sessions.length > 4) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[4].uuid);
                        }
                } else if (event.text == "5") {
                    if (Store.chat-sessions.length > 5) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[5].uuid);
                        }
                } else if (event.text == "6") {
                    if (Store.chat-sessions.length > 6) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[6].uuid);
                    }
                } else if (event.text == "7") {
                    if (Store.chat-sessions.length > 7) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[7].uuid);
                    }
                } else if (event.text == "8") {
                    if (Store.chat-sessions.length > 8) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[8].uuid);
                    }
                } else if (event.text == "9") {
                    if (Store.chat-sessions.length > 9) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[9].uuid);
                    }
                }
            }
            accept
        }

        key-released(event) => {
            if (event.text == Key.Control) {
                is-ctrl-pressed = false;
            }
            accept
        }

        HorizontalLayout {
            LPanel {}

            rpanel := RPanel {
                show-archive-dialog => {
                    root.show-archive-dialog();
                }

            }

            arch-panel := ArchivePanel {}
        }

        modal := Rectangle {
            function hide() {
                if (icon-dialog.visible) {
                    Store.icon-dialog-setting.is-show = false;
                } else if (arch-dialog.visible) {
                    Store.show-archive-dialog = false;
                    rpanel.force-question-input-focus();
                } else if (about-dialog.visible) {
                    Store.about-dialog.show = false;
                } else if (help-dialog.visible) {
                    Store.help-dialog.show = false;
                }
            }

            if session-dialog.visible || setting-dialog.visible || oc-dialog.visible || about-dialog.visible || help-dialog.visible || arch-dialog.visible || screen-dialog.visible: low-modal := Rectangle {
                width: 100%; height: 100%; opacity: 0.3;
                background: Theme.basic-black-color;
                TouchArea { }
            }

            session-dialog := SessionDialog {
                close => {
                    rpanel.force-question-input-focus();
                }
            }

            screen-dialog := ScreenDialog {
                close => {
                    rpanel.force-question-input-focus();
                }
            }

            arch-dialog := NewArchiveDialog {
                close => {
                    rpanel.force-question-input-focus();
                }
            }

            setting-dialog := SettingDialog {
                close => {
                    rpanel.force-question-input-focus();
                }
            }

            if icon-dialog.visible : middle-modal := Rectangle {
                width: 100%; height: 100%; opacity: 0.3;
                background: Theme.basic-black-color;
                TouchArea { }
            }

            icon-dialog := IconDialog {
                select-index(index) => {
                    root.session-icon-index = index;
                }
            }

            oc-dialog := OkCancelDialog { }
            about-dialog := AboutDialog { }
            help-dialog := HelpDialog { }
        }

        msg := Message {
            x: root.width / 2 - self.width / 2;
            y: 50px;
            text: Store.message.text;
            type: Store.message.text-type;
            clicked => {
                Logic.copy-to-clipboard(self.text);
            }
        }
    }
}

export { Util, Logic, ChatItem, ChatSession, Store, InstTipItem }
