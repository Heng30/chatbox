import { Button, ListView, ComboBox , VerticalBox, TextEdit, HorizontalBox} from "std-widgets.slint";

import { Theme } from "./theme.slint";
import { Logic } from "./logic.slint";
import { Store } from "./store.slint";
import { Util } from "./util.slint";
import { Translator } from "./translator.slint";
import { ChatItem, ChatSession, Store } from "./store.slint";
import { LPanel } from "./leftPanel/panel.slint";
import { RPanel } from "./rightPanel/panel.slint";
import { Message } from "./base/message.slint";
import { SessionDialog } from "./dialog/session/dialog.slint";
import { SettingDialog } from "./dialog/setting/dialog.slint";
import { AboutDialog } from "./dialog/about.slint";
import { HelpDialog } from "./dialog/help.slint";
import { OkCancelDialog } from "./dialog/ok-cancel.slint";
import { IconBtn } from "./base/icon-btn.slint";
import { NewArchiveDialog } from "./dialog/new-archive.slint";
import { ArchivePanel } from "./archive/panel.slint";

export component AppWindow inherits Window {
    default-font-size: Theme.default-font-size;
    preferred-width: Theme.default-width;
    preferred-height: Theme.default-height;
    background: Theme.base-background-color;
    no-frame: true;
    title: "chatbox";

    in-out property session-name <=> session-dialog.name;
    in-out property session-system-prompt <=> session-dialog.system-prompt;
    in-out property session-api-model <=> session-dialog.api-model;
    in-out property session-use-history <=> session-dialog.use-history;
    in-out property session-shortcut-instruction <=> session-dialog.shortcut-instruction;
    in-out property question <=> rpanel.question;
    in-out property chats-viewport-y <=> rpanel.chats-viewport-y;

    in-out property<bool> is-chats-auto-scroll-down: false;

    public function is-chats-on-bottom() -> bool {
        return rpanel.is-chats-on-bottom();
    }

    public function archive-scroll-to-top() {
        arch-panel.scroll-to-top();
    }

    public function chats-scroll-to-bottom() {
        rpanel.scroll-to-bottom();
    }

    public function jump-to-viewport-y(vy: length) {
        rpanel.jump-to-viewport-y(vy);
    }

    public function show-archive-dialog() {
        Store.show-archive-dialog = true;
        arch-dialog.focus();
    }

    public function force-search-input-focus() {
        arch-panel.focus();
    }

    init => {
        rpanel.force-question-input-focus();
    }

    FocusScope {
        property <bool> is-ctrl-pressed: false;
        key-pressed(event) => {
            if (event.text == Key.Control) {
                is-ctrl-pressed = true;
            }

            if (is-ctrl-pressed) {
                if (event.text == "b") {
                    Theme.toggle-archive-panel();
                } else if (event.text == "i") {
                    rpanel.force-question-input-focus();
                } else if (event.text == "o") {
                    root.force-search-input-focus();
                } else if (event.text == "n") {
                    root.show-archive-dialog();
                } else if (event.text == "u") {
                    Logic.switch-session(Store.current-session-uuid, Store.previous-session-uuid);
                } else if (event.text == "y") {
                    root.is-chats-auto-scroll-down = !root.is-chats-auto-scroll-down;
                    if (root.is-chats-auto-scroll-down) {
                        Logic.show-message(Store.translator.session-chat-enabled-auto-scroll-down, "success");
                    } else {
                        Logic.show-message(Store.translator.session-chat-disabled-auto-scroll-down, "success");
                    }
                } else if (event.text == "0") {
                    if (Store.chat-sessions.length > 0) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[0].uuid);
                    }
                } else if (event.text == "1") {
                    if (Store.chat-sessions.length > 1) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[1].uuid);
                    }
                } else if (event.text == "2") {
                    if (Store.chat-sessions.length > 2) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[2].uuid);
                    }
                } else if (event.text == "3") {
                    if (Store.chat-sessions.length > 3) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[3].uuid);
                    }
                } else if (event.text == "4") {
                    if (Store.chat-sessions.length > 4) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[4].uuid);
                        }
                } else if (event.text == "5") {
                    if (Store.chat-sessions.length > 5) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[5].uuid);
                        }
                } else if (event.text == "6") {
                    if (Store.chat-sessions.length > 6) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[6].uuid);
                    }
                } else if (event.text == "7") {
                    if (Store.chat-sessions.length > 7) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[7].uuid);
                    }
                } else if (event.text == "8") {
                    if (Store.chat-sessions.length > 8) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[8].uuid);
                    }
                } else if (event.text == "9") {
                    if (Store.chat-sessions.length > 9) {
                        Logic.switch-session(Store.current-session-uuid, Store.chat-sessions[9].uuid);
                    }
                }
            }
            reject
        }

        key-released(event) => {
            if (event.text == Key.Control) {
                is-ctrl-pressed = false;
            }
            reject
        }

        Rectangle {
            height: root.height;
            HorizontalLayout {
                padding: Theme.padding / 2;
                LPanel {}
                rpanel := RPanel { }
                arch-panel := ArchivePanel {}
            }
        }

        Rectangle {
            x: parent.width - self.width - Theme.body-right-panel-width;
            y: Theme.padding * 2;
            height: Theme.icon-size;
            width: hbox.preferred-width;

            hbox := HorizontalLayout {
                alignment: end;
                padding-right: Theme.padding * 2;
                spacing: Theme.spacing * 2;

                IconBtn {
                    icon: @image-url("./images/mute.svg");
                    clicked => {
                        Logic.stop-audio-play();
                    }
                }

                IconBtn {
                    icon: @image-url("./images/save.svg");
                    clicked => {
                        Logic.save-session-chats(Store.current-session-uuid);
                    }
                }

                IconBtn {
                    icon: @image-url("./images/copy.svg");
                    clicked => {
                        Logic.copy-session-chats(Store.current-session-uuid);
                        Logic.show-message(Store.translator.session-chat-copy-success, "success");
                    }
                }

                IconBtn {
                    icon: @image-url("./images/file-archive.svg");
                    clicked => {
                        root.show-archive-dialog();
                    }
                }

                IconBtn {
                    icon: Theme.body-right-panel-width > 0 ?
                              @image-url("./images/arrow-right.svg")
                              : @image-url("./images/arrow-left.svg");

                    clicked => {
                        Theme.toggle-archive-panel();
                    }
                }
            }
        }

        Rectangle {
            if session-dialog.visible || setting-dialog.visible || oc-dialog.visible || about-dialog.visible || help-dialog.visible || arch-dialog.visible : Rectangle {
                width: 100%;
                height: 100%;
                opacity: 0.3;
                background: Theme.basic-black-color;

                TouchArea {}
            }

            session-dialog := SessionDialog { }
            setting-dialog := SettingDialog { }
            about-dialog := AboutDialog { }
            help-dialog := HelpDialog { }
            arch-dialog := NewArchiveDialog {
                close => {
                    rpanel.force-question-input-focus();
                }
            }

            oc-dialog := OkCancelDialog { }
        }

        msg := Message {
            x: root.width / 2 - self.width / 2;
            y: 50px;
            text: Store.message.text;
            type: Store.message.text-type;
            clicked => {
                Logic.copy-to-clipboard(self.text);
            }
        }
    }
}

export { Util, Logic, ChatItem, ChatSession, Store }
