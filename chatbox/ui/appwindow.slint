import { Button, ListView, ComboBox , VerticalBox, TextEdit, HorizontalBox} from "std-widgets.slint";

import { Theme } from "./theme.slint";
import { Logic } from "./logic.slint";
import { ChatItem, ChatSession, Store } from "./store.slint";
import { LPanel } from "./leftPanel/panel.slint";
import { RPanel } from "./rightPanel/panel.slint";
import { Message } from "./base/message.slint";
import { Store } from "./store.slint";
import { SessionDialog } from "./dialog/session/dialog.slint";
import { SettingDialog } from "./dialog/setting/dialog.slint";
import { OkCancelDialog } from "./dialog/ok-cancel.slint";
import { IconBtn } from "./base/icon-btn.slint";

export component AppWindow inherits Window {
    default-font-size: Theme.default-font-size;
    min-width: Theme.default-width;
    min-height: Theme.default-height;
    background: Theme.base-background-color;
    no-frame: true;
    title: "chatbox";

    in-out property session-name <=> session-dialog.name;
    in-out property session-system-prompt <=> session-dialog.system-prompt;
    in-out property session-api-model <=> session-dialog.api-model;
    in-out property session-use-history <=> session-dialog.use-history;

    in-out property question <=> rpanel.question;

    HorizontalLayout {
        padding: Theme.padding;
        spacing: Theme.spacing;

        LPanel {}
        rpanel := RPanel {}
    }

    FocusScope {
        key-pressed(event) => {
            if (event.text == Key.Return) {
                if (root.question != "") {
                    Logic.send-input-text(root.question);
                    root.question = "";
                }
            }

            if (event.text == Key.Escape) {
                Logic.hide-window();
            }
            accept
        }
    }

    IconBtn {
        icon: @image-url("./images/copy.svg");
        x: parent.width - self.width - Theme.padding * 8;
        y: Theme.padding * 2;
        bg-color: Colors.gray.darker(80%);

        clicked => {
            Logic.copy-session-chats(Store.current-session-uuid);
            Logic.show-message("复制会话成功！", "success");
        }
    }

    if session-dialog.visible || setting-dialog.visible || oc-dialog.visible : Rectangle {
        width: 100%;
        height: 100%;
        opacity: 0.3;
        background: Theme.basic-black-color;

        TouchArea {}
    }

    setting-dialog := SettingDialog{  }

    session-dialog := SessionDialog { }

    oc-dialog := OkCancelDialog { }

    msg := Message {
        x: root.width / 2 - self.width / 2;
        y: 50px;
        text: Store.message.text;
        type: Store.message.text-type;
        clicked => {
            Logic.copy-to-clipboard(self.text);
        }
    }
}

export { Logic, ChatItem, ChatSession, Store }
